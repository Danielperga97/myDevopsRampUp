pipeline {
    agent any
    environment {
        GOOGLE_PROJECT_ID = 'ramp-up-247818';
        GOOGLE_SERVICE_ACCOUNT_KEY = credentials('JENKINS_SERVICE_ACCOUNT');
        HOME = '.'
    }
   
    stages {
        stage('terraform and google cloud set up') {
            steps {
                sh 'terraform -v'
                sh 'cd infrastructure'
                sh 'echo ------------------setting up google cloud ------------------'
                sh """
        	        #!/bin/bash
        	        curl -o /tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-231.0.0-linux-x86_64.tar.gz;
                    tar -xvf /tmp/google-cloud-sdk.tar.gz -C /tmp/;
		            /tmp/google-cloud-sdk/install.sh -q;
                    source /tmp/google-cloud-sdk/path.bash.inc;
			        gcloud config set project ${GOOGLE_PROJECT_ID};
			        gcloud components install kubectl;
                    PATH=$PATH:/tmp/google-cloud-sdk/bin
                    source /tmp/google-cloud-sdk/path.bash.inc;
                    [[ ":$PATH:" != *":/tmp/google-cloud-sdk/bin:"* ]] && PATH="/tmp/google-cloud-sdk/bin:${PATH}"
                    echo $PATH
			        gcloud auth activate-service-account --key-file ${GOOGLE_SERVICE_ACCOUNT_KEY};
                    gcloud components update
                """
                sh 'echo -------------------Account configured ------------------'

            }
        }
        stage('test plan') {
            steps {
                sh 'terraform plan -out=plan '
            }
        }
        stage('plan approval'){
        steps{
        script {
          def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
        }
        }
        }
        stage('deploy') {
            steps {
                sh "echo ---------------terraforming----------------------------"
                sh "terraform apply -auto-approve"
                sh "echo ---------------terraformed----------------------------"
                sh ""
                sh '/usr/bin/curl -o /tmp/front-dockerfile/dockerfile https://raw.githubusercontent.com/Danielperga97/myDevopsRampUp/develop/containers/backend/dockerfile'
                sh 'gcloud docker -- pull  gcr.io/ramp-up-247818/movie-analyst-ui:stable'
                sh "docker rmi  gcr.io/ramp-up-247818/movie-analyst-ui:stable"
                sh  """   
                #!/bin/bash 
                gcloud container clusters get-credentials gke-cluster-ea11e6b4 --zone us-east1-b;
                /tmp/google-cloud-sdk/bin/kubectl
                cd ../k8s/frontend
                kubectl create -f frontDeployment.yml
                kubectl create -f frontService.yml
                """
            }
        }
    }
}

